from .. import loader, utils
import io
import requests
from gtts import gTTS  # Google Text-to-Speech
import os

@loader.tds
class VoiceSpeakerMod(loader.Module):
    """–û–∑–≤—É—á–∫–∞ —Ç–µ–∫—Å—Ç–∞ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
    strings = {
        "name": "VoiceSpeaker",
        "ready": "üîä –ì–æ—Ç–æ–≤–æ!",
        "no_text": "‚ùå –£–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –æ–∑–≤—É—á–∫–∏",
        "error": "‚ö†Ô∏è –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≥–æ–ª–æ—Å–∞",
        "lang_set": "üåç –Ø–∑—ã–∫ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: {}",
        "speed_set": "‚ö° –°–∫–æ—Ä–æ—Å—Ç—å —Ä–µ—á–∏: {}",
        "help": (
            "üõ† <b>–°–ø—Ä–∞–≤–∫–∞:</b>\n"
            "<code>.voice —Ç–µ–∫—Å—Ç</code> - –æ–∑–≤—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç\n"
            "<code>.voice lang ru</code> - —Å–º–µ–Ω–∏—Ç—å —è–∑—ã–∫ (ru/en/es/...)\n"
            "<code>.voice speed 1.2</code> - —Å–∫–æ—Ä–æ—Å—Ç—å (0.5-2.0)\n\n"
            "üó£ <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –≥–æ–ª–æ—Å–∞:</b>\n"
            "‚Ä¢ <code>male</code> - –º—É–∂—Å–∫–æ–π\n"
            "‚Ä¢ <code>female</code> - –∂–µ–Ω—Å–∫–∏–π\n"
            "‚Ä¢ <code>google</code> - —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π (gTTS)"
        )
    }

    def __init__(self):
        self.config = loader.ModuleConfig(
            loader.ConfigValue(
                "lang",
                "ru",
                "–Ø–∑—ã–∫ –æ–∑–≤—É—á–∫–∏ (ru/en/es...)",
                validator=loader.validators.String()
            ),
            loader.ConfigValue(
                "speed",
                1.0,
                "–°–∫–æ—Ä–æ—Å—Ç—å —Ä–µ—á–∏",
                validator=loader.validators.Float(minimum=0.5, maximum=2.0)
            ),
            loader.ConfigValue(
                "voice_type",
                "google",
                "–¢–∏–ø –≥–æ–ª–æ—Å–∞ (google/male/female)",
                validator=loader.validators.Choice(["google", "male", "female"])
            ),
        )

    async def client_ready(self, client, db):
        self._client = client

    async def voicecmd(self, message):
        """–û–∑–≤—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç"""
        args = utils.get_args_raw(message)
        
        if not args:
            await utils.answer(message, self.strings["help"])
            return

        # –°–º–µ–Ω–∞ —è–∑—ã–∫–∞
        if args.startswith("lang "):
            lang = args.split(" ", 1)[1]
            self.config["lang"] = lang
            await utils.answer(message, self.strings["lang_set"].format(lang))
            return

        # –°–º–µ–Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç–∏
        if args.startswith("speed "):
            try:
                speed = float(args.split(" ", 1)[1])
                self.config["speed"] = speed
                await utils.answer(message, self.strings["speed_set"].format(speed))
            except:
                await utils.answer(message, "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å")
            return

        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≥–æ–ª–æ—Å–∞
        try:
            text = args
            
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º gTTS (Google Text-to-Speech)
            tts = gTTS(
                text=text,
                lang=self.config["lang"],
                slow=False if self.config["speed"] >= 1.0 else True
            )
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
            voice_file = io.BytesIO()
            tts.write_to_fp(voice_file)
            voice_file.seek(0)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∫ –≥–æ–ª–æ—Å–æ–≤–æ–µ
            await message.client.send_file(
                message.chat_id,
                voice_file,
                voice_note=True,
                reply_to=message.id
            )
            await utils.answer(message, self.strings["ready"])
            
        except Exception as e:
            await utils.answer(message, f"{self.strings['error']}: {str(e)}")

    async def watcher(self, message):
        """–ê–≤—Ç–æ-–æ–∑–≤—É—á–∫–∞ –ø–æ —Ä–µ–ø–ª–∞—é"""
        if message.is_reply:
            replied = await message.get_reply_message()
            if replied.sender_id == (await message.client.get_me()).id:
                if "–æ–∑–≤—É—á—å" in message.text.lower():
                    await self.voicecmd(message)
