from .. import loader, utils
from telethon.tl.types import Message
from telethon import events

@loader.tds
class StealthFontMod(loader.Module):
    """‚úçÔ∏è –°—Ç–∏–ª—å —à—Ä–∏—Ñ—Ç–∞ –±–µ–∑ –ø–æ–º–µ—Ç–∫–∏ '–∏–∑–º–µ–Ω–µ–Ω–æ'"""
    strings = {
        "name": "StealthFont",
        "on": "üü¢ <b>–°—Ç–∏–ª—å –≤–∫–ª—é—á–µ–Ω:</b> {} (–±–µ–∑ –ø–æ–º–µ—Ç–∫–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)",
        "off": "üî¥ <b>–°—Ç–∏–ª—å –æ—Ç–∫–ª—é—á–µ–Ω</b>",
        "current": "‚úèÔ∏è <b>–¢–µ–∫—É—â–∏–π —Å—Ç–∏–ª—å:</b> {}",
        "help": (
            "üõ† <b>–ö–æ–º–∞–Ω–¥—ã:</b>\n"
            "<code>.sfont bold</code> - –∂–∏—Ä–Ω—ã–π\n"
            "<code>.sfont italic</code> - –∫—É—Ä—Å–∏–≤\n"
            "<code>.sfont underline</code> - –ø–æ–¥—á—ë—Ä–∫–Ω—É—Ç—ã–π\n"
            "<code>.sfont strike</code> - –∑–∞—á—ë—Ä–∫–Ω—É—Ç—ã–π\n"
            "<code>.sfont off</code> - –≤—ã–∫–ª—é—á–∏—Ç—å\n"
            "<code>.sfont</code> - —Å—Ç–∞—Ç—É—Å"
        )
    }

    def __init__(self):
        self.config = loader.ModuleConfig(
            loader.ConfigValue(
                "active_style",
                None,
                "–ê–∫—Ç–∏–≤–Ω—ã–π —Å—Ç–∏–ª—å",
                validator=loader.validators.Choice(["bold", "italic", "underline", "strike", None])
            )
        )
        self._client = None
        self._me = None

    async def client_ready(self, client, db):
        self._client = client
        self._me = await client.get_me()
        client.add_event_handler(self._handle_outgoing, events.NewMessage(outgoing=True))

    async def _handle_outgoing(self, event):
        """–ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è"""
        if not self.config["active_style"] or not event.message.text:
            return
            
        style = self.config["active_style"]
        styled_text = self._apply_style(event.message.text, style)
        
        # –û—Ç–º–µ–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ
        await event.delete()
        await self._client.send_message(
            entity=event.chat_id,
            message=styled_text,
            parse_mode='HTML'
        )

    async def sfontcmd(self, message: Message):
        """–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∏–ª—è–º–∏"""
        args = utils.get_args_raw(message)
        
        if not args:
            style = self.config["active_style"] or "–æ—Ç–∫–ª—é—á–µ–Ω"
            await utils.answer(message, self.strings["current"].format(style))
            return
            
        if args.lower() == "off":
            self.config["active_style"] = None
            await utils.answer(message, self.strings["off"])
            return
            
        if args.lower() not in ["bold", "italic", "underline", "strike"]:
            await utils.answer(message, self.strings["help"])
            return
            
        self.config["active_style"] = args.lower()
        await utils.answer(message, self.strings["on"].format(args.lower()))

    def _apply_style(self, text: str, style: str) -> str:
        """–ü—Ä–∏–º–µ–Ω—è–µ—Ç —Å—Ç–∏–ª—å —á–µ—Ä–µ–∑ HTML-—Ä–∞–∑–º–µ—Ç–∫—É"""
        styles = {
            "bold": f"<b>{text}</b>",
            "italic": f"<i>{text}</i>",
            "underline": f"<u>{text}</u>",
            "strike": f"<s>{text}</s>"
        }
        return styles[style]
