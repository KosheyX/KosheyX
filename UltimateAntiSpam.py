import re
import logging
from datetime import datetime
from hikkatl.types import Message
from hikkatl import functions, types
from .. import loader, utils

logger = logging.getLogger(__name__)

@loader.tds
class AntiSpamFinalSolution(loader.Module):
    """–§–∏–Ω–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è –∞–Ω—Ç–∏—Å–ø–∞–º–∞ —Å –ø–æ–ª–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫"""

    strings = {
        "name": "AntiSpamFinal",
        "banned": "üö® <b>–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!</b>\n–ü—Ä–∏—á–∏–Ω–∞: {reason}",
        "log_msg": (
            "üõ° <b>–õ–æ–≥ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏</b>\n\n"
            "üë§ ID: <code>{user_id}</code>\n"
            "‚è∞ –í—Ä–µ–º—è: {time}\n"
            "üîû –ü—Ä–∏—á–∏–Ω–∞: {reason}\n"
            "üìù –°–æ–æ–±—â–µ–Ω–∏–µ: <code>{msg}</code>"
        ),
        "already_banned": "‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω",
        "history_cleared": "üóëÔ∏è –ü–µ—Ä–µ–ø–∏—Å–∫–∞ —É–¥–∞–ª–µ–Ω–∞"
    }

    def __init__(self):
        self.config = loader.ModuleConfig(
            "ban_users", True, "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –±–∞–Ω–∏—Ç—å",
            "delete_messages", True, "–£–¥–∞–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è",
            "delete_history", True, "–£–¥–∞–ª—è—Ç—å –ø–µ—Ä–µ–ø–∏—Å–∫—É",
            "report_to_chat", True, "–û—Ç–ø—Ä–∞–≤–ª—è—Ç—å –æ—Ç—á–µ—Ç"
        )
        self._ban_count = 0

    async def client_ready(self, client, db):
        self.client = client
        self.db = db
        try:
            self._log_chat = await self.client.get_entity("https://t.me/+ve_fxQ6dYj9hOTJi")
            logger.info("–ß–∞—Ç –¥–ª—è –ª–æ–≥–æ–≤ –ø–æ–¥–∫–ª—é—á–µ–Ω")
        except Exception as e:
            logger.error("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —á–∞—Ç–∞: %s", e)
            self._log_chat = None

    async def safe_block(self, user_id: int):
        """–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π"""
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            result = await self.client(functions.contacts.GetBlockedRequest(
                offset=0,
                limit=100
            ))
            if any(user_id == user.id for user in result.blocked):
                return False, "already_banned"
            
            await self.client(functions.contacts.BlockRequest(id=user_id))
            return True, "success"
        except Exception as e:
            logger.error("–û—à–∏–±–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏: %s", e)
            return False, str(e)

    async def safe_delete_history(self, user_id: int):
        """–ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏"""
        try:
            await self.client(functions.messages.DeleteHistoryRequest(
                peer=user_id,
                max_id=0,
                revoke=True
            ))
            return True
        except Exception as e:
            logger.error("–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏: %s", e)
            return False

    async def process_ban(self, message: Message, reason: str):
        user_id = message.sender_id
        response_msg = ""
        
        try:
            # 1. –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            if self.config["ban_users"]:
                success, status = await self.safe_block(user_id)
                if not success:
                    response_msg += self.strings["already_banned"] + "\n" if status == "already_banned" else ""
            
            # 2. –£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            if self.config["delete_messages"]:
                try:
                    await message.delete()
                except:
                    pass
            
            # 3. –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ–π –∏—Å—Ç–æ—Ä–∏–∏
            if self.config["delete_history"]:
                if await self.safe_delete_history(user_id):
                    response_msg += self.strings["history_cleared"] + "\n"
            
            # 4. –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á–µ—Ç–∞
            if self.config["report_to_chat"] and self._log_chat:
                try:
                    await self.client.send_message(
                        self._log_chat,
                        self.strings["log_msg"].format(
                            user_id=user_id,
                            time=datetime.now().strftime("%d.%m.%Y %H:%M"),
                            reason=reason,
                            msg=utils.escape_html((message.text or "")[:200])
                        )
                    )
                except Exception as e:
                    logger.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–æ–≥–∞: %s", e)
            
            # 5. –§–∏–Ω–∞–ª–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            response_msg += self.strings["banned"].format(reason=reason)
            await utils.answer(message, response_msg)
            self._ban_count += 1
            
        except Exception as e:
            logger.error("–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏: %s", e)

    async def detect_triggers(self, message: Message) -> str:
        text = (message.text or "").lower()
        triggers = {
            "–ü–æ—Ä–Ω–æ–≥—Ä–∞—Ñ–∏—è": r"–ø–æ—Ä–Ω–æ|porn|xxx|onlyfans|—Å–µ–∫—Å|üîû",
            "–†–µ–∫–ª–∞–º–∞": r"–ø–æ–¥–ø–∏—à–∏—Å—å|–∫–∞–Ω–∞–ª|–∫—É–ø–∏—Ç—å|—Ä–µ–∫–ª–∞–º–∞",
            "–í—Ä–µ–¥–æ–Ω–æ—Å–Ω–æ–µ": r"bit\.ly|—Å–∫–∞—á–∞—Ç—å|\.exe|–≤–∏—Ä—É—Å"
        }
        for reason, pattern in triggers.items():
            if re.search(pattern, text, re.IGNORECASE):
                return reason
        return None

    async def watcher(self, message: Message):
        if not message.is_private or message.out:
            return
            
        if reason := await self.detect_triggers(message):
            await self.process_ban(message, reason)

    async def afstatcmd(self, message: Message):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –º–æ–¥—É–ª—è"""
        status = (
            "üîß <b>AntiSpamFinal Status</b>\n\n"
            f"‚Ä¢ –ó–∞–±–∞–Ω–µ–Ω–æ: {self._ban_count}\n"
            f"‚Ä¢ –ê–≤—Ç–æ–±–∞–Ω: {'‚úÖ –í–∫–ª' if self.config['ban_users'] else '‚ùå –í—ã–∫–ª'}\n"
            f"‚Ä¢ –£–¥–∞–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–ø–∏—Å–∫–∏: {'‚úÖ –í–∫–ª' if self.config['delete_history'] else '‚ùå –í—ã–∫–ª'}\n"
            f"‚Ä¢ –û—Ç—á–µ—Ç—ã: {'‚úÖ –í–∫–ª' if self.config['report_to_chat'] else '‚ùå –í—ã–∫–ª'}"
        )
        await utils.answer(message, status)
